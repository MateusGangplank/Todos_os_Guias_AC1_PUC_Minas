<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="2.7.1" version="1.0">
This file is intended to be loaded by Logisim (http://www.cburch.com/logisim/).
<lib desc="#Wiring" name="0"/>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4">
    <tool name="ROM">
      <a name="contents">addr/data: 8 8
0
</a>
    </tool>
  </lib>
  <lib desc="#I/O" name="5"/>
  <lib desc="#Base" name="6">
    <tool name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
  </lib>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="6" map="Button2" name="Menu Tool"/>
    <tool lib="6" map="Button3" name="Menu Tool"/>
    <tool lib="6" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="6" name="Poke Tool"/>
    <tool lib="6" name="Edit Tool"/>
    <tool lib="6" name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
    <sep/>
    <tool lib="0" name="Pin">
      <a name="tristate" val="false"/>
    </tool>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="labelloc" val="east"/>
    </tool>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
  </toolbar>
  <circuit name="main">
    <a name="circuit" val="main"/>
    <a name="clabel" val=""/>
    <a name="clabelup" val="east"/>
    <a name="clabelfont" val="SansSerif plain 12"/>
    <wire from="(240,440)" to="(420,440)"/>
    <wire from="(680,250)" to="(680,280)"/>
    <wire from="(370,190)" to="(560,190)"/>
    <wire from="(30,110)" to="(30,220)"/>
    <wire from="(500,390)" to="(500,420)"/>
    <wire from="(610,190)" to="(690,190)"/>
    <wire from="(530,260)" to="(530,420)"/>
    <wire from="(30,110)" to="(180,110)"/>
    <wire from="(330,90)" to="(330,130)"/>
    <wire from="(530,420)" to="(530,510)"/>
    <wire from="(80,420)" to="(180,420)"/>
    <wire from="(750,230)" to="(820,230)"/>
    <wire from="(500,420)" to="(530,420)"/>
    <wire from="(80,310)" to="(80,420)"/>
    <wire from="(680,250)" to="(700,250)"/>
    <wire from="(230,200)" to="(370,200)"/>
    <wire from="(240,330)" to="(330,330)"/>
    <wire from="(80,310)" to="(180,310)"/>
    <wire from="(610,280)" to="(680,280)"/>
    <wire from="(550,130)" to="(550,170)"/>
    <wire from="(690,210)" to="(700,210)"/>
    <wire from="(80,180)" to="(80,310)"/>
    <wire from="(30,460)" to="(180,460)"/>
    <wire from="(560,170)" to="(560,180)"/>
    <wire from="(330,270)" to="(330,330)"/>
    <wire from="(30,350)" to="(30,460)"/>
    <wire from="(530,260)" to="(560,260)"/>
    <wire from="(30,50)" to="(30,110)"/>
    <wire from="(30,350)" to="(180,350)"/>
    <wire from="(420,300)" to="(560,300)"/>
    <wire from="(230,90)" to="(330,90)"/>
    <wire from="(500,210)" to="(560,210)"/>
    <wire from="(30,220)" to="(30,350)"/>
    <wire from="(370,190)" to="(370,200)"/>
    <wire from="(80,180)" to="(180,180)"/>
    <wire from="(80,70)" to="(80,180)"/>
    <wire from="(80,70)" to="(180,70)"/>
    <wire from="(550,170)" to="(560,170)"/>
    <wire from="(330,270)" to="(560,270)"/>
    <wire from="(500,210)" to="(500,360)"/>
    <wire from="(420,300)" to="(420,440)"/>
    <wire from="(330,130)" to="(550,130)"/>
    <wire from="(80,50)" to="(80,70)"/>
    <wire from="(30,220)" to="(180,220)"/>
    <wire from="(690,190)" to="(690,210)"/>
    <comp lib="0" loc="(530,510)" name="Pin">
      <a name="facing" val="north"/>
      <a name="tristate" val="false"/>
      <a name="label" val="Chave"/>
    </comp>
    <comp lib="1" loc="(230,90)" name="AND Gate"/>
    <comp lib="0" loc="(80,50)" name="Pin">
      <a name="facing" val="south"/>
      <a name="tristate" val="false"/>
      <a name="label" val="A"/>
    </comp>
    <comp lib="0" loc="(30,50)" name="Pin">
      <a name="facing" val="south"/>
      <a name="tristate" val="false"/>
      <a name="label" val="B"/>
    </comp>
    <comp lib="6" loc="(351,413)" name="Text">
      <a name="text" val="temp4"/>
    </comp>
    <comp lib="6" loc="(788,203)" name="Text">
      <a name="text" val="temp7"/>
    </comp>
    <comp lib="1" loc="(610,280)" name="AND Gate">
      <a name="label" val="And3"/>
    </comp>
    <comp lib="6" loc="(373,105)" name="Text">
      <a name="text" val="temp1"/>
    </comp>
    <comp lib="1" loc="(750,230)" name="OR Gate">
      <a name="label" val="Or2"/>
    </comp>
    <comp lib="6" loc="(519,227)" name="Text">
      <a name="text" val="notchave"/>
    </comp>
    <comp lib="1" loc="(500,360)" name="NOT Gate">
      <a name="facing" val="north"/>
    </comp>
    <comp lib="1" loc="(240,440)" name="NOR Gate"/>
    <comp lib="1" loc="(230,200)" name="OR Gate"/>
    <comp lib="6" loc="(648,266)" name="Text">
      <a name="text" val="temp6"/>
    </comp>
    <comp lib="1" loc="(610,190)" name="AND Gate">
      <a name="label" val="And2"/>
    </comp>
    <comp lib="1" loc="(240,330)" name="NAND Gate"/>
    <comp lib="6" loc="(643,181)" name="Text">
      <a name="text" val="temp5"/>
    </comp>
    <comp lib="6" loc="(546,307)" name="Text">
      <a name="text" val="temp6"/>
    </comp>
    <comp lib="0" loc="(820,230)" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="label" val="S1"/>
      <a name="labelloc" val="east"/>
    </comp>
    <comp lib="6" loc="(366,180)" name="Text">
      <a name="text" val="temp2"/>
    </comp>
    <comp lib="6" loc="(386,250)" name="Text">
      <a name="text" val="tenp3"/>
    </comp>
  </circuit>
</project>
