$date
	Thu Oct 11 18:49:02 2012
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module mux $end
$var wire 4 ! d1 [3:0] $end
$var wire 4 " d2 [3:0] $end
$var wire 1 # selec $end
$var reg 4 $ s [3:0] $end
$upscope $end
$scope module teste $end
$var wire 1 % clok $end
$var wire 8 & s [7:0] $end
$var reg 1 ' adr $end
$var reg 1 ( clr $end
$var reg 8 ) in [7:0] $end
$var reg 1 * rw $end
$scope module clk $end
$var reg 1 + clk $end
$upscope $end
$scope module r1 $end
$var wire 1 , adr $end
$var wire 1 % clk $end
$var wire 1 - clr $end
$var wire 8 . data [7:0] $end
$var wire 1 / rw $end
$var wire 4 0 stmp [3:0] $end
$var wire 4 1 stmp1 [3:0] $end
$var reg 8 2 s [7:0] $end
$scope module r1 $end
$var wire 1 , adr $end
$var wire 1 % clk $end
$var wire 1 3 clock $end
$var wire 1 - clr $end
$var wire 4 4 data [3:0] $end
$var wire 4 5 q [3:0] $end
$var wire 4 6 qnot [3:0] $end
$var wire 1 / rw $end
$var reg 4 7 s [3:0] $end
$scope module j1 $end
$var wire 1 3 clk $end
$var wire 1 - clr $end
$var wire 1 8 j $end
$var wire 1 9 k $end
$var reg 1 : q $end
$var reg 1 ; qnot $end
$upscope $end
$scope module j2 $end
$var wire 1 3 clk $end
$var wire 1 - clr $end
$var wire 1 < j $end
$var wire 1 = k $end
$var reg 1 > q $end
$var reg 1 ? qnot $end
$upscope $end
$scope module j3 $end
$var wire 1 3 clk $end
$var wire 1 - clr $end
$var wire 1 @ j $end
$var wire 1 A k $end
$var reg 1 B q $end
$var reg 1 C qnot $end
$upscope $end
$scope module j4 $end
$var wire 1 3 clk $end
$var wire 1 - clr $end
$var wire 1 D j $end
$var wire 1 E k $end
$var reg 1 F q $end
$var reg 1 G qnot $end
$upscope $end
$upscope $end
$scope module r2 $end
$var wire 1 , adr $end
$var wire 1 % clk $end
$var wire 1 H clock $end
$var wire 1 - clr $end
$var wire 4 I data [3:0] $end
$var wire 4 J q [3:0] $end
$var wire 4 K qnot [3:0] $end
$var wire 1 / rw $end
$var reg 4 L s [3:0] $end
$scope module j1 $end
$var wire 1 H clk $end
$var wire 1 - clr $end
$var wire 1 M j $end
$var wire 1 N k $end
$var reg 1 O q $end
$var reg 1 P qnot $end
$upscope $end
$scope module j2 $end
$var wire 1 H clk $end
$var wire 1 - clr $end
$var wire 1 Q j $end
$var wire 1 R k $end
$var reg 1 S q $end
$var reg 1 T qnot $end
$upscope $end
$scope module j3 $end
$var wire 1 H clk $end
$var wire 1 - clr $end
$var wire 1 U j $end
$var wire 1 V k $end
$var reg 1 W q $end
$var reg 1 X qnot $end
$upscope $end
$scope module j4 $end
$var wire 1 H clk $end
$var wire 1 - clr $end
$var wire 1 Y j $end
$var wire 1 Z k $end
$var reg 1 [ q $end
$var reg 1 \ qnot $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#12
$dumpvars
1\
0[
1Z
0Y
0X
1W
0V
1U
0T
1S
0R
1Q
1P
0O
1N
0M
bx L
b1001 K
b110 J
b110 I
1H
1G
0F
1E
0D
0C
1B
0A
1@
1?
0>
1=
0<
0;
1:
09
18
bx 7
b1010 6
b101 5
b101 4
13
bx 2
bx 1
bx 0
1/
b1100101 .
0-
1,
1+
1*
b1100101 )
0(
1'
bx &
1%
bz $
z#
bz "
bz !
$end
#17
b101 7
b101 0
b110 L
b110 1
03
0H
0*
0/
#22
0'
0,
#24
0+
0%
#27
1'
1,
#36
b1100101 2
b1100101 &
1+
1%
#48
0+
0%
#60
b1100101 2
1+
1%
#72
0+
0%
#77
19
0=
0N
0Z
08
1<
1M
1Y
b110 4
b1111 I
b11110110 )
b11110110 .
#82
1*
1/
#84
0?
1>
1;
b1001 6
0:
b110 5
0\
1[
0P
b0 K
1O
b1111 J
b1100101 2
13
1H
1+
1%
#87
b110 7
b110 0
b1111 L
b1111 1
03
0H
0*
0/
#92
0'
0,
#96
0+
0%
#102
1'
1,
#108
b11110110 2
b11110110 &
1+
1%
#112
0'
0,
#120
0+
0%
#122
1'
1,
#132
0'
0,
1+
1%
#142
1'
1,
#144
0+
0%
#152
0'
0,
#156
1+
1%
#168
0+
0%
#180
1+
1%
#192
0+
0%
#204
1+
1%
#216
0+
0%
#228
1+
1%
#240
0+
0%
#252
1+
1%
#264
0+
0%
#276
1+
1%
#288
0+
0%
#300
1+
1%
#312
0+
0%
#324
1+
1%
#336
0+
0%
#348
1+
1%
#360
0+
0%
#372
1+
1%
#384
0+
0%
#396
1+
1%
#408
0+
0%
#420
1+
1%
#432
0+
0%
#444
1+
1%
#456
0+
0%
#468
1+
1%
#480
0+
0%
#492
1+
1%
#504
0+
0%
#516
1+
1%
#528
0+
0%
#540
1+
1%
#552
0+
0%
#564
1+
1%
#576
0+
0%
#588
1+
1%
#600
0+
0%
#612
1+
1%
#624
0+
0%
#636
1+
1%
#648
0+
0%
#652
